name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest || echo "No tests found, skipping."

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/travel-agent-chatbot:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/travel-agent-chatbot:latest

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_SSH_KEY }}
          ENV_VARS: ${{ secrets.APP_ENV_VARS }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem

          ssh -i key.pem -o StrictHostKeyChecking=no $USER@$HOST << EOF
            # Pull latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/travel-agent-chatbot:latest

            # Remove old container if exists
            docker rm -f travel-agent-chatbot || true

            # Save environment variables if provided
            if [ ! -z "$ENV_VARS" ]; then
              echo "$ENV_VARS" > .env
              docker run -d --env-file .env -p 5000:5000 -p 7000:7000 --name travel-agent-chatbot ${{ secrets.DOCKER_USERNAME }}/travel-agent-chatbot:latest
            else
              docker run -d -p 5000:5000 -p 7000:7000 --name travel-agent-chatbot ${{ secrets.DOCKER_USERNAME }}/travel-agent-chatbot:latest
            fi

            # Wait and check health
            sleep 10
            echo "Checking apps..."
            curl -f http://localhost:5000 || echo "Warning: App on 5000 may not be running"
            curl -f http://localhost:7000 || echo "Warning: App on 7000 may not be running"
          EOF

          rm key.pem
